---
import Layout from "@/layouts/Layout.astro";
import ResourceButtons from "@/components/ResourceButtons.astro";

interface Props {
  title: string;
  description?: string;
  pubDate?: Date;
  updatedDate?: Date;
  heroImage?: string;
  resources?: Array<{
    type: string;
    label?: string;
    url?: string;
  }>;
  showToc?: boolean;
  tocItems?: Array<{
    id: string;
    title: string;
    level: number;
  }>;
}

const { 
  title, 
  description, 
  pubDate, 
  updatedDate, 
  heroImage, 
  resources,
  showToc = false,
  tocItems = []
} = Astro.props;
---

<Layout hideHomeButton={true}>
  <article class="min-h-screen">
    <!-- Breadcrumb -->
    <div class="w-full flex justify-start max-w-4xl mx-auto px-4 mb-6">
      <slot name="breadcrumb" />
    </div>

    <!-- Article Container -->
    <div class="max-w-4xl mx-auto px-4">
      <!-- Hero Image -->
      {heroImage && (
        <div class="mb-8">
          <img 
            src={heroImage} 
            alt="Hero image" 
            class="w-full h-64 md:h-80 object-cover rounded-2xl shadow-2xl"
          />
        </div>
      )}

      <!-- Article Header -->
      <header class="mb-8">
        <h1 class="text-4xl md:text-5xl font-bold text-white mb-4 leading-tight">
          {title}
        </h1>
        {description && (
          <p class="text-xl text-white/80 leading-relaxed mb-4">
            {description}
          </p>
        )}
        
        <!-- Meta Information -->
        <div class="flex flex-wrap items-center gap-4 text-sm text-white/60">
          {pubDate && (
            <div class="flex items-center gap-2">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
              </svg>
              <time datetime={pubDate.toISOString()}>
                {pubDate.toLocaleDateString(undefined, { 
                  year: 'numeric', 
                  month: 'long', 
                  day: 'numeric' 
                })}
              </time>
            </div>
          )}
          {updatedDate && (
            <div class="flex items-center gap-2">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
              </svg>
              <time datetime={updatedDate.toISOString()}>
                Updated {updatedDate.toLocaleDateString(undefined, { 
                  year: 'numeric', 
                  month: 'short', 
                  day: 'numeric' 
                })}
              </time>
            </div>
          )}
        </div>
      </header>

      <!-- Resources -->
      {resources && resources.length > 0 && (
        <div class="mb-8 p-6 bg-white/5 border border-white/10 rounded-xl backdrop-blur-sm">
          <h3 class="text-lg font-semibold text-white mb-4 flex items-center gap-2">
            <svg class="w-5 h-5 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"></path>
            </svg>
            Resources
          </h3>
          <ResourceButtons resources={resources} class="compact" />
        </div>
      )}

      <!-- Table of Contents -->
      {showToc && tocItems.length > 0 && (
        <div class="mb-8 p-6 bg-white/5 border border-white/10 rounded-xl backdrop-blur-sm">
          <h3 class="text-lg font-semibold text-white mb-4 flex items-center gap-2">
            <svg class="w-5 h-5 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16"></path>
            </svg>
            Table of Contents
          </h3>
          <nav class="space-y-2">
            {tocItems.map((item) => (
              <a 
                href={`#${item.id}`} 
                class="block text-blue-300 hover:text-blue-200 transition-colors duration-300"
                style={`padding-left: ${(item.level - 1) * 1.5}rem;`}
              >
                {item.title}
              </a>
            ))}
          </nav>
        </div>
      )}

      <!-- Article Content -->
      <div class="prose prose-lg prose-invert max-w-none [&>*:last-child]:mb-0 [&>p:last-child]:mb-0 [&>p]:text-white/90 [&>p]:leading-relaxed [&>p]:text-lg [&>h1]:text-white [&>h1]:text-3xl [&>h1]:font-bold [&>h1]:mb-4 [&>h2]:text-white [&>h2]:text-2xl [&>h2]:font-bold [&>h2]:mb-3 [&>h3]:text-white [&>h3]:text-xl [&>h3]:font-bold [&>h3]:mb-2 [&>h4]:text-white [&>h4]:text-lg [&>h4]:font-bold [&>h4]:mb-2 [&>strong]:text-white [&>strong]:font-bold [&>em]:text-white/90 [&>em]:italic [&>ul]:text-white/90 [&>ul]:list-disc [&>ul]:pl-6 [&>ul]:mb-4 [&>ol]:text-white/90 [&>ol]:list-decimal [&>ol]:pl-6 [&>ol]:mb-4 [&>li]:text-white/90 [&>li]:mb-1 [&>a]:text-blue-300 [&>a]:underline [&>a]:hover:text-blue-200 [&>blockquote]:border-l-4 [&>blockquote]:border-white/30 [&>blockquote]:pl-4 [&>blockquote]:italic [&>blockquote]:text-white/80 [&>code]:bg-white/10 [&>code]:px-1 [&>code]:py-0.5 [&>code]:rounded [&>code]:text-sm [&>pre]:bg-white/10 [&>pre]:p-4 [&>pre]:rounded-lg [&>pre]:overflow-x-auto">
        <slot />
      </div>

      <!-- Article Footer -->
      <footer class="mt-12 pt-8 border-t border-white/10">
        <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
          <div class="text-sm text-white/60">
            <p>Have questions about this event? <a href="/contact" class="text-blue-300 hover:text-blue-200 underline">contact</a></p>
          </div>
          <div class="flex gap-4">
            <button 
              onclick="window.print()" 
              class="flex items-center gap-2 text-white/60 hover:text-white transition-colors duration-300"
            >
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z"></path>
              </svg>
              Print
            </button>
            <button 
              onclick="navigator.share({title: document.title, url: window.location.href})" 
              class="flex items-center gap-2 text-white/60 hover:text-white transition-colors duration-300"
            >
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"></path>
              </svg>
              Share
            </button>
          </div>
        </div>
      </footer>
    </div>
  </article>
</Layout>

<style>
  /* Smooth scrolling for anchor links */
  html {
    scroll-behavior: smooth;
  }
  
  /* Print styles */
  @media print {
    .prose {
      color: black !important;
    }
    
    .prose h1,
    .prose h2,
    .prose h3,
    .prose h4,
    .prose h5,
    .prose h6 {
      color: black !important;
    }
    
    .prose p,
    .prose li {
      color: black !important;
    }
  }
</style> 