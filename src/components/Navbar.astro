---
import { SITE_TITLE, NAV_LINKS as links } from "@/consts";
---

<!-- Minimal Clean Navigation -->
<nav class="fixed top-0 left-0 w-full h-full pointer-events-none !z-[9999]">
  <!-- Navigation Links - Middle Left -->
  <div class="absolute top-1/2 left-8 transform -translate-y-1/2 pointer-events-auto">
    <div class="hidden md:flex flex-col space-y-6" style="font-family: 'Helvetica Neue', sans-serif;">
      {
        links.map((link) => {
          const href = link.href ?? link.title.toLowerCase().replaceAll(" ", "-");
          const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, "");
          const subpath = pathname.match(/[^\/]+/g);
          const isActive = href === pathname || href === "/" + (subpath?.[0] || "");
          
          const isExternalLink = href.startsWith("http://") || href.startsWith("https://");
          const finalHref = isExternalLink ? href : `/${href}`;
          
          return (
            <a
              class:list={[{ "text-white": isActive }]}
              class="text-white/60 hover:text-white text-lg font-light transition-colors duration-300"
              href={finalHref}
              target={isExternalLink ? "_blank" : undefined}
              rel={isExternalLink ? "noopener noreferrer" : undefined}
            >
              {link.title.toLowerCase()}
            </a>
          );
        })
      }
    </div>
  </div>

  <!-- Mobile Menu Button -->
  <div class="md:hidden absolute top-6 right-6 pointer-events-auto">
    <button
      id="mobile-menu-btn"
      class="w-10 h-10 bg-white/10 hover:bg-white/20 rounded-full flex items-center justify-center transition-colors duration-300"
      aria-label="Toggle mobile menu"
    >
      <div class="w-4 h-4 flex flex-col justify-center items-center">
        <span class="w-3 h-0.5 bg-white mb-1"></span>
        <span class="w-3 h-0.5 bg-white mb-1"></span>
        <span class="w-3 h-0.5 bg-white"></span>
      </div>
    </button>
  </div>

  <!-- Mobile Menu Overlay -->
  <div
    id="mobile-menu"
    class="md:hidden fixed inset-0 bg-black/95 backdrop-blur-md opacity-0 invisible transition-all duration-300 pointer-events-none"
    style="font-family: 'Helvetica Neue', sans-serif;"
  >
    <div class="flex flex-col items-center justify-center h-full space-y-8">
      {
        links.map((link) => {
          const href = link.href ?? link.title.toLowerCase().replaceAll(" ", "-");
          const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, "");
          const subpath = pathname.match(/[^\/]+/g);
          const isActive = href === pathname || href === "/" + (subpath?.[0] || "");
          
          const isExternalLink = href.startsWith("http://") || href.startsWith("https://");
          const finalHref = isExternalLink ? href : `/${href}`;
          
          return (
            <a
              class:list={[{ "text-white": isActive }]}
              class="text-white/60 hover:text-white text-xl font-light transition-colors duration-300"
              href={finalHref}
              target={isExternalLink ? "_blank" : undefined}
              rel={isExternalLink ? "noopener noreferrer" : undefined}
            >
              {link.title.toLowerCase()}
            </a>
          );
        })
      }
    </div>
  </div>
</nav>

<script>
  // Mobile menu toggle
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuBtn = document.getElementById('mobile-menu-btn');
    const mobileMenu = document.getElementById('mobile-menu');
    
    if (mobileMenuBtn && mobileMenu) {
      mobileMenuBtn.addEventListener('click', () => {
        const isOpen = mobileMenu.classList.contains('opacity-100');
        
        if (isOpen) {
          mobileMenu.classList.remove('opacity-100', 'visible', 'pointer-events-auto');
          mobileMenu.classList.add('opacity-0', 'invisible', 'pointer-events-none');
        } else {
          mobileMenu.classList.remove('opacity-0', 'invisible', 'pointer-events-none');
          mobileMenu.classList.add('opacity-100', 'visible', 'pointer-events-auto');
        }
      });
    }
  });
</script>