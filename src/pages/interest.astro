---
import Layout from "@/layouts/Layout.astro";
import { SITE_TITLE, DISCORD_LINK } from "@/consts";
---

<Layout title={`Join ${SITE_TITLE}`} description="Join our programming club and connect with fellow developers">
  <div class="max-w-4xl mx-auto px-4 py-8">
    <!-- Page Header -->
    <div class="text-center mb-12">
      <h1 class="text-5xl md:text-6xl font-bold mb-4 glow-pulse-title">
        Join <span class="text-purple-400">{SITE_TITLE}</span>
      </h1>
      <p class="text-xl text-white/80 max-w-2xl mx-auto">
        Ready to dive into programming? Fill out our interest form and join our community of developers!
      </p>
    </div>

    <!-- Styled Form Container -->
    <div class="relative overflow-hidden rounded-2xl backdrop-blur-xl shadow-2xl border border-white/20 bg-gradient-to-br from-white/[0.08] via-white/[0.05] to-white/[0.02] p-8">
      <!-- Glass effect overlay -->
      <div class="absolute inset-0 bg-gradient-to-br from-white/[0.1] via-transparent to-transparent opacity-60"></div>
      
      <!-- Subtle glow effect -->
      <div class="absolute inset-0 bg-gradient-to-br from-purple-400/5 via-transparent to-blue-400/5 opacity-80 rounded-2xl"></div>
      
      <div class="relative z-10">
        <h2 class="text-2xl font-bold mb-6 text-white drop-shadow-sm border-b border-white/20 pb-3">
          2025 progsu Signup
        </h2>
        
        <!-- Custom Form -->
        <form id="join-form" class="space-y-6" novalidate onsubmit="return false;">
          <!-- Event Interests -->
          <div class="form-group">
            <label class="form-label">Which of our events are you interested in? *</label>
            <div class="checkbox-group" id="interests-group">
              <label class="checkbox-item">
                <input type="checkbox" name="entry.1453136131" value="100$ Rock-Paper-Scissors Tourny" class="form-checkbox" />
                <span class="checkbox-label">100$ Rock-Paper-Scissors Tourny</span>
              </label>
              <label class="checkbox-item">
                <input type="checkbox" name="entry.1453136131" value="Microsoft Company Tour" class="form-checkbox" />
                <span class="checkbox-label">Microsoft Company Tour</span>
              </label>
              <label class="checkbox-item">
                <input type="checkbox" name="entry.1453136131" value="Projects & Startups (any skill level)" class="form-checkbox" />
                <span class="checkbox-label">Projects & Startups (any skill level)</span>
              </label>
              <label class="checkbox-item">
                <input type="checkbox" name="entry.1453136131" value="Leetcode + Mock Interviews" class="form-checkbox" />
                <span class="checkbox-label">Leetcode + Mock Interviews</span>
              </label>
              <label class="checkbox-item">
                <input type="checkbox" name="entry.1453136131" value="Meta Panelist & Alumni" class="form-checkbox" />
                <span class="checkbox-label">Meta Panelist & Alumni</span>
              </label>
              <label class="checkbox-item">
                <input type="checkbox" name="entry.1453136131" value="Internship Guidance/Workshop" class="form-checkbox" />
                <span class="checkbox-label">Internship Guidance/Workshop</span>
              </label>
              <label class="checkbox-item">
                <input type="checkbox" name="entry.1453136131" value="Hackathons & Competitions" class="form-checkbox" />
                <span class="checkbox-label">Hackathons & Competitions</span>
              </label>
            </div>
            <div class="error-message" id="interests-error"></div>
          </div>

          <!-- Name Field -->
          <div class="form-group">
            <label for="name" class="form-label">Full Name *</label>
            <input 
              type="text" 
              id="name" 
              name="entry.776442728" 
              required 
              class="form-input"
              placeholder="Enter your full name"
              data-validate="required"
            />
            <div class="error-message" id="name-error"></div>
          </div>

          <!-- Email Field -->
          <div class="form-group">
            <label for="email" class="form-label">Email *</label>
            <input 
              type="email" 
              id="email" 
              name="entry.2137026288" 
              required 
              class="form-input"
              placeholder="your.email@gsu.edu"
              data-validate="email"
            />
            <div class="error-message" id="email-error"></div>
          </div>

          <!-- Phone Number Field -->
          <div class="form-group">
            <label for="phone" class="form-label">Phone Number (optional)</label>
            <input 
              type="tel" 
              id="phone" 
              name="entry.2095083110" 
              class="form-input"
              placeholder="(555) 123-4567"
              data-validate="phone"
            />
            <p class="text-sm text-white/60 mt-2">
              Wanna get texts for the cool events, free food, tech talks, or internship drops? Toss your number in, we'll only hit you up with the good stuff.
            </p>
            <p class="text-xs text-yellow-400/70 mt-1">
              💡 Tip: Enter just the digits (e.g., 5551234567) for best compatibility
            </p>
            <div class="error-message" id="phone-error"></div>
          </div>

          <!-- SMS Consent -->
          <div class="form-group">
            <label class="checkbox-item">
              <input type="checkbox" name="entry.372796838" value="I agree to receive SMS updates from progsu. Msg & data rates may apply. I can opt out anytime." class="form-checkbox" />
              <span class="checkbox-label">
                I agree to receive SMS updates from progsu. Msg & data rates may apply. I can opt out anytime.
              </span>
            </label>
          </div>

          <!-- Submit Button -->
          <div class="form-group">
            <button type="button" class="submit-btn" id="submit-btn">
              <span class="btn-text">Submit Application</span>
              <span class="btn-glow"></span>
            </button>
          </div>
        </form>
        
        <!-- Fallback message for when JavaScript is disabled -->
        <noscript>
          <div class="mt-4 p-4 bg-red-500/20 border border-red-500/50 rounded-lg">
            <p class="text-red-300 text-center">JavaScript is required for this form to work properly. Please enable JavaScript in your browser.</p>
          </div>
        </noscript>

        
        <!-- Additional Info -->
        <div class="mt-8 p-6 rounded-xl bg-white/[0.05] border border-white/10">
          <h3 class="text-lg font-semibold mb-3 text-purple-300">What happens next?</h3>
          <ul class="space-y-2 text-white/80">
            <li class="flex items-start gap-2">
              <span class="text-purple-400 mt-1">→</span>
              <span>We'll review your application and get back to you within 48 hours</span>
            </li>
            <li class="flex items-start gap-2">
              <span class="text-purple-400 mt-1">→</span>
              <span>Join our Discord server to connect with other members</span>
            </li>
            <li class="flex items-start gap-2">
              <span class="text-purple-400 mt-1">→</span>
              <span>Attend our next meeting and start building amazing projects</span>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</Layout>

<style>
  .glow-pulse-title {
    animation: titlePulse 2.5s infinite;
  }
  
  @keyframes titlePulse {
    0%, 100% {
      text-shadow:
        0 0 6px rgba(59, 130, 246, 0.18),
        0 0 12px rgba(255, 255, 255, 0.10),
        0 0 24px rgba(59, 130, 246, 0.08);
      color: #fff;
    }
    50% {
      text-shadow:
        0 0 12px rgba(59, 130, 246, 0.22),
        0 0 24px rgba(255, 255, 255, 0.13),
        0 0 36px rgba(59, 130, 246, 0.10);
      color: #f4faff;
    }
  }

  /* Form Styles */
  .form-group {
    margin-bottom: 1.5rem;
  }

  .form-label {
    display: block;
    font-weight: 600;
    color: #fff;
    margin-bottom: 0.5rem;
    font-size: 0.95rem;
    text-shadow: 0 0 10px rgba(255, 255, 255, 0.1);
  }

  .form-input,
  .form-select,
  .form-textarea {
    width: 100%;
    padding: 0.75rem 1rem;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 0.5rem;
    color: #fff;
    font-family: inherit;
    font-size: 0.95rem;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
  }

  .form-input:focus,
  .form-select:focus,
  .form-textarea:focus {
    outline: none;
    border-color: rgba(147, 51, 234, 0.6);
    box-shadow: 0 0 0 3px rgba(147, 51, 234, 0.1);
    background: rgba(255, 255, 255, 0.08);
  }

  .form-input.error {
    border-color: rgba(239, 68, 68, 0.6);
    box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
    background: rgba(239, 68, 68, 0.05);
  }

  .form-input.success {
    border-color: rgba(34, 197, 94, 0.6);
    box-shadow: 0 0 0 3px rgba(34, 197, 94, 0.1);
    background: rgba(34, 197, 94, 0.05);
  }

  .form-input::placeholder,
  .form-textarea::placeholder {
    color: rgba(255, 255, 255, 0.5);
  }

  .error-message {
    color: #ef4444;
    font-size: 0.875rem;
    margin-top: 0.5rem;
    padding: 0.5rem;
    background: rgba(239, 68, 68, 0.1);
    border: 1px solid rgba(239, 68, 68, 0.3);
    border-radius: 0.375rem;
    display: none;
    animation: slideDown 0.3s ease;
  }

  .error-message.show {
    display: block;
  }

  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .checkbox-group {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 0.75rem;
    padding: 1rem;
    border: 2px solid transparent;
    border-radius: 0.5rem;
    transition: all 0.3s ease;
  }

  .checkbox-group.error {
    border-color: rgba(239, 68, 68, 0.6);
    background: rgba(239, 68, 68, 0.05);
    box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
  }

  .checkbox-group.success {
    border-color: rgba(34, 197, 94, 0.6);
    background: rgba(34, 197, 94, 0.05);
    box-shadow: 0 0 0 3px rgba(34, 197, 94, 0.1);
  }

  .checkbox-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 0.375rem;
    transition: all 0.2s ease;
  }

  .checkbox-item:hover {
    background: rgba(255, 255, 255, 0.05);
  }

  .form-checkbox {
    width: 1.25rem;
    height: 1.25rem;
    accent-color: #9333ea;
    cursor: pointer;
  }

  .checkbox-label {
    color: #fff;
    font-size: 0.9rem;
    cursor: pointer;
  }

  .submit-btn {
    position: relative;
    width: 100%;
    padding: 1rem 2rem;
    background: linear-gradient(135deg, #7c3aed 0%, #a855f7 50%, #c084fc 100%);
    border: none;
    border-radius: 0.75rem;
    color: #fff;
    font-weight: 600;
    font-size: 1.1rem;
    cursor: pointer;
    overflow: hidden;
    transition: all 0.3s ease;
    transform: translateZ(0);
  }

  .submit-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(147, 51, 234, 0.4);
  }

  .submit-btn:active {
    transform: translateY(0);
  }

  .btn-text {
    position: relative;
    z-index: 2;
  }

  .btn-glow {
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s ease;
  }

  .submit-btn:hover .btn-glow {
    left: 100%;
  }



  .button-group {
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
    margin-top: 1.5rem;
  }

  .submit-another-btn {
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 0.75rem;
    color: white;
    padding: 0.75rem 1.5rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 1rem;
  }

  .submit-another-btn:hover {
    background: rgba(255, 255, 255, 0.15);
    transform: translateY(-2px);
  }

  .success-icon {
    width: 60px;
    height: 60px;
    background: linear-gradient(135deg, #22c55e, #16a34a);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2rem;
    color: white;
    margin: 0 auto 1rem;
    box-shadow: 0 4px 20px rgba(34, 197, 94, 0.3);
  }



  .back-btn {
    background: linear-gradient(135deg, #7c3aed 0%, #a855f7 50%, #c084fc 100%);
    border: none;
    border-radius: 0.5rem;
    color: white;
    padding: 0.75rem 1.5rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .back-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(147, 51, 234, 0.4);
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .google-form-container iframe {
      height: 600px;
    }
  }
</style>

<script>
console.log('🚀 Form script loading...');

// Add error tracking
window.addEventListener('error', function(e) {
  console.error('JavaScript Error:', e.error, e.filename, e.lineno, e.colno);
  console.error('Error details:', e.error?.stack);
});

console.log('📝 Error handler added');

document.addEventListener('DOMContentLoaded', function() {
  console.log('✅ DOM loaded - initializing form');
  
  try {
    console.log('🔍 Looking for form elements...');
    const form = document.getElementById('join-form');
    const submitBtn = document.getElementById('submit-btn');
    
    console.log('Form element:', form);
    console.log('Submit button:', submitBtn);
    
    if (!form || !submitBtn) {
      console.error('Form or button not found!');
      console.error('Available form elements:', document.querySelectorAll('form'));
      console.error('Available buttons:', document.querySelectorAll('button'));
      return;
    }
    
    console.log('✅ Form and button found');
    
    // Simple debug indicator to confirm JS is working
    const debugDiv = document.createElement('div');
    debugDiv.style.cssText = 'position:fixed;top:10px;right:10px;background:green;color:white;padding:5px;z-index:9999;font-size:11px;border-radius:3px;';
    debugDiv.innerHTML = 'FORM READY';
    document.body.appendChild(debugDiv);
    
    console.log('🎯 Starting validation setup...');
    
    // Validation functions
    const validators = {
      required: (value) => {
        return value.trim().length > 0 ? null : 'This field is required';
      },
      email: (value) => {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!value.trim()) return 'Email is required';
        if (!emailRegex.test(value)) return 'Please enter a valid email address';
        return null;
      },
      phone: (value) => {
        if (!value.trim()) return null; // Phone is optional
        const cleaned = value.replace(/\D/g, '');
        if (cleaned.length < 7 || cleaned.length > 15) {
          return 'Please enter a valid phone number (7-15 digits)';
        }
        return null;
      }
    };
    
    console.log('✅ Validators defined');
    
    // Error display functions
    function showError(input, message) {
      const errorDiv = document.getElementById(input.id + '-error');
      if (errorDiv) {
        errorDiv.textContent = message;
        errorDiv.classList.add('show');
      }
      input.classList.remove('success');
      input.classList.add('error');
    }
    
    function hideError(input) {
      const errorDiv = document.getElementById(input.id + '-error');
      if (errorDiv) {
        errorDiv.classList.remove('show');
      }
      input.classList.remove('error');
    }
    
    function showSuccess(input) {
      input.classList.remove('error');
      input.classList.add('success');
    }
    
    console.log('✅ Error display functions defined');
    
    // Checkbox group error handling
    function showCheckboxGroupError(message) {
      const errorDiv = document.getElementById('interests-error');
      const group = document.getElementById('interests-group');
      if (errorDiv) {
        errorDiv.textContent = message;
        errorDiv.classList.add('show');
      }
      if (group) {
        group.classList.remove('success');
        group.classList.add('error');
      }
    }
    
    function hideCheckboxGroupError() {
      const errorDiv = document.getElementById('interests-error');
      const group = document.getElementById('interests-group');
      if (errorDiv) {
        errorDiv.classList.remove('show');
      }
      if (group) {
        group.classList.remove('error');
      }
    }
    
    function showCheckboxGroupSuccess() {
      const group = document.getElementById('interests-group');
      if (group) {
        group.classList.remove('error');
        group.classList.add('success');
      }
    }
    
    console.log('✅ Checkbox functions defined');
    
    // Field validation
    function validateField(input) {
      const validationType = input.dataset.validate;
      const value = input.value;
      
      if (!validationType) return true;
      
      const validator = validators[validationType];
      if (!validator) return true;
      
      const error = validator(value);
      
      if (error) {
        showError(input, error);
        return false;
      } else {
        hideError(input);
        if (value.trim()) {
          showSuccess(input);
        }
        return true;
      }
    }
    
    console.log('✅ validateField function defined');
    
    // Add validation to inputs
    console.log('🔧 Setting up input validation...');
    const inputs = form.querySelectorAll('input[data-validate]');
    console.log('Found inputs with validation:', inputs.length);
    
    inputs.forEach(input => {
      input.addEventListener('blur', () => {
        validateField(input);
      });
      
      input.addEventListener('input', () => {
        if (input.classList.contains('error')) {
          validateField(input);
        }
      });
    });
    
    console.log('✅ Input validation setup complete');
    
    // Add validation to checkboxes
    console.log('🔧 Setting up checkbox validation...');
    const checkboxes = form.querySelectorAll('input[name="entry.1453136131"]');
    console.log('Found checkboxes:', checkboxes.length);
    
    checkboxes.forEach(checkbox => {
      checkbox.addEventListener('change', () => {
        const checkedBoxes = form.querySelectorAll('input[name="entry.1453136131"]:checked');
        if (checkedBoxes.length > 0) {
          hideCheckboxGroupError();
          showCheckboxGroupSuccess();
        } else {
          const group = document.getElementById('interests-group');
          if (group.classList.contains('error') || group.classList.contains('success')) {
            showCheckboxGroupError('Please select at least one event interest');
          }
        }
      });
    });
    
    console.log('✅ Checkbox validation setup complete');
    
    // Form submission
    console.log('🔧 Setting up form submission...');
    submitBtn.addEventListener('click', function(e) {
      console.log('🔥 Submit button clicked');
      
      e.preventDefault();
      e.stopPropagation();
      
      try {
        handleFormSubmission();
      } catch (error) {
        console.error('Form submission error:', error);
        alert('There was an error submitting the form. Please try again.');
        submitBtn.disabled = false;
        submitBtn.querySelector('.btn-text').textContent = 'Submit Application';
      }
    });
    
    console.log('✅ Click handler added');
    
    function handleFormSubmission() {
      console.log('Starting form validation...');
      
      // Validate all fields
      let isValid = true;
      const inputs = form.querySelectorAll('input[data-validate]');
      
      inputs.forEach(input => {
        const fieldValid = validateField(input);
        if (!fieldValid) {
          isValid = false;
        }
      });
      
      // Check interests
      const checkedInterests = form.querySelectorAll('input[name="entry.1453136131"]:checked');
      if (checkedInterests.length === 0) {
        showCheckboxGroupError('Please select at least one event interest');
        isValid = false;
      } else {
        hideCheckboxGroupError();
        showCheckboxGroupSuccess();
      }
      
      if (!isValid) {
        console.log('Validation failed');
        const firstError = form.querySelector('.error');
        if (firstError) {
          firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
        return;
      }
      
      console.log('✅ Validation passed - submitting form');
      
      // Show loading state
      submitBtn.disabled = true;
      submitBtn.querySelector('.btn-text').textContent = 'Submitting...';
      
      // Create Google Forms submission
      const submitForm = document.createElement('form');
      submitForm.method = 'POST';
      submitForm.action = 'https://docs.google.com/forms/d/e/1FAIpQLSdIuhYbn3uP0_3k9bAF7bhtqMaQTkGQLD9-lmY6NKgrumGqXw/formResponse';
      submitForm.style.display = 'none';
      
      // Get form data
      const formData = new FormData(form);
      
      console.log('Form data being submitted:');
      for (let [name, value] of formData.entries()) {
        // Skip SMS checkbox - handle separately
        if (name === 'entry.372796838') continue;
        
        if (value) {
          // Clean phone number
          if (name === 'entry.2095083110') {
            value = value.replace(/\D/g, '');
            if (!value) continue;
          }
          
          console.log(name + ':', value);
          const input = document.createElement('input');
          input.type = 'hidden';
          input.name = name;
          input.value = value;
          submitForm.appendChild(input);
        }
      }
      
      // Handle SMS consent
      const smsCheckbox = form.querySelector('input[name="entry.372796838"]');
      if (smsCheckbox && smsCheckbox.checked) {
        console.log('SMS consent: checked');
        const smsInput = document.createElement('input');
        smsInput.type = 'hidden';
        smsInput.name = 'entry.372796838';
        smsInput.value = smsCheckbox.value;
        submitForm.appendChild(smsInput);
      }
      
      // Submit form
      document.body.appendChild(submitForm);
      console.log('📤 Submitting to Google Forms...');
      
      // Create hidden iframe for submission to prevent redirect
      const iframe = document.createElement('iframe');
      iframe.name = 'hidden_iframe';
      iframe.style.display = 'none';
      document.body.appendChild(iframe);
      
      // Set form target to iframe
      submitForm.target = 'hidden_iframe';
      submitForm.submit();
      
      // Cleanup and redirect immediately (don't wait for Google response)
              setTimeout(() => {
          document.body.removeChild(submitForm);
          document.body.removeChild(iframe);
          console.log('✅ Form submitted successfully');
        }, 500);
        
        setTimeout(() => {
          console.log('🔄 Redirecting to thank-you page...');
          window.location.href = '/thank-you';
        }, 1000);
    }
    
    console.log('✅ Form initialization complete');
    
  } catch (error) {
    console.error('Setup error:', error);
    console.error('Error stack:', error.stack);
  }
});

console.log('✅ Script setup complete');
</script> 