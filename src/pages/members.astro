---
/**
 * =============================================================================
 * MEMBERS PAGE - BRUTALIST REDESIGN
 * =============================================================================
 */

// Layout and UI Components
import Layout from "@/layouts/Layout.astro";
import MemberCard from "@/components/MemberCard.astro";
import LiteMemberCard from "@/components/LiteMemberCard.astro";

// Data and Business Logic
import { membersByYear } from "@/data/members";
import { sortMembersByRole, separateMembersByDisplayType } from "@/utils/memberUtils";
import { DISCORD_LINK, GOOGLE_FORM_URL } from "@/consts";

// Sort all members by their role priority within each academic year
const sortedMembers = sortMembersByRole(membersByYear);
---

<Layout
  title="Members - progsu"
  description="Meet the amazing members of progsu across the years. From founding members to current leadership, discover the people building GSU's programming community."
>
  <!-- Members Page with Brutalist Theme -->
  <div class="min-h-screen bg-black relative overflow-hidden">
    <!-- Global Grid Background -->
    <div class="fixed inset-0 pointer-events-none">
      <div class="w-full h-full opacity-3" style="background-image: linear-gradient(rgba(255,255,255,0.1) 1px, transparent 1px), linear-gradient(90deg, rgba(255,255,255,0.1) 1px, transparent 1px); background-size: 50px 50px;"></div>
    </div>
    
    <!-- Header Section -->
    <section class="pt-32 pb-16 px-8 relative z-10">
      <div class="max-w-6xl mx-auto">
        <!-- Brutalist Section Header -->
        <div class="mb-16 flex items-end justify-between">
          <div>
            <h1 class="text-4xl md:text-6xl font-bold text-white mb-2 tracking-tight" style="font-family: 'Helvetica Neue', sans-serif;">
              members
            </h1>
            <div class="text-xs text-white/40 uppercase tracking-widest font-mono">
              // the people building the future
            </div>
          </div>
          
          <!-- Member Counter -->
          <div class="text-right">
            <div class="text-2xl font-bold text-white font-mono">
              [{Object.values(sortedMembers).flat().length.toString().padStart(2, '0')}]
            </div>
            <div class="text-xs text-white/40 uppercase tracking-widest">
              total
            </div>
          </div>
        </div>
        
        <!-- Terminal-style Description -->
        <div class="border border-white/10 bg-white/[0.02] p-6 mb-12">
          <div class="font-mono text-white/60 space-y-2 mb-4">
            <div class="text-green-400 text-sm">$ ls members/ --recursive</div>
            <div class="text-white/70 text-sm">scanning directory structure...</div>
            <div class="text-white/50 text-sm">found {Object.keys(sortedMembers).length} academic years with {Object.values(sortedMembers).flat().length} total members</div>
          </div>
          <p class="text-lg text-white/80 leading-relaxed font-light" style="font-family: 'Helvetica Neue', sans-serif;">
            Meet the incredible people who make progsu possible! From our founding members who started this journey
            to our current leadership team, each person contributes to building GSU's vibrant programming community in Atlanta.
          </p>
        </div>
      </div>
    </section>

    <!-- Year Navigation -->
    <section class="pb-8 px-8 relative z-10">
      <div class="max-w-6xl mx-auto">
        <!-- Terminal-style Year Tabs -->
        <div class="border border-white/10 bg-white/[0.02] p-6">
          <div class="font-mono text-white/60 text-sm mb-4">
            <span class="text-green-400">$</span> select academic_year from members
          </div>
          
          <div class="flex flex-wrap gap-2">
            {Object.keys(sortedMembers).map((year, index) => (
              <button 
                class={`tab-btn px-4 py-2 border font-mono text-sm transition-all duration-200 ${
                  index === 0 
                    ? 'border-white bg-white/[0.08] text-white' 
                    : 'border-white/20 bg-white/[0.02] text-white/70 hover:border-white/40 hover:bg-white/[0.05] hover:text-white'
                }`}
                data-tab={year}
                id={`tab-${year}`}
              >
                {year}
              </button>
            ))}
          </div>
        </div>
      </div>
    </section>

    <!-- Members Content -->
    <section class="pb-16 px-8 relative z-10">
      <div class="max-w-6xl mx-auto">
        {Object.entries(sortedMembers).map(([year, members], yearIndex) => {
          const { fullCardMembers, liteCardMembers, listMembers } = separateMembersByDisplayType(members);
          return (
            <div 
              class={`tab-content ${yearIndex === 0 ? 'block' : 'hidden'}`}
              data-tab-content={year}
            >
              <!-- Year Header -->
              <div class="mb-12 flex items-end justify-between">
                <div>
                  <h2 class="text-3xl md:text-4xl font-bold text-white mb-2 tracking-tight" style="font-family: 'Helvetica Neue', sans-serif;">
                    {year}
                  </h2>
                  <div class="text-xs text-white/40 uppercase tracking-widest font-mono">
                    // academic year roster
                  </div>
                </div>
                
                <div class="text-right">
                  <div class="text-xl font-bold text-white font-mono">
                    [{members.length.toString().padStart(2, '0')}]
                  </div>
                  <div class="text-xs text-white/40 uppercase tracking-widest">
                    members
                  </div>
                </div>
              </div>
              
              <!-- Leadership Cards (Full Cards) -->
              {fullCardMembers.length > 0 && (
                <div class="mb-12">
                  <div class="border border-white/10 bg-white/[0.02] p-8">
                    <div class="flex items-center justify-between mb-8">
                      <div class="text-white/40 font-mono text-xs uppercase tracking-widest">
                        leadership
                      </div>
                      <div class="text-white/30 font-mono text-xs">
                        [{fullCardMembers.length.toString().padStart(2, '0')}]
                      </div>
                    </div>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                      {fullCardMembers.map((member) => (
                        <MemberCard member={member} year={year} />
                      ))}
                    </div>
                  </div>
                </div>
              )}
              
              <!-- Core Team Cards (Lite Cards) -->
              {liteCardMembers.length > 0 && (
                <div class="mb-12">
                  <div class="border border-white/10 bg-white/[0.02] p-8">
                    <div class="flex items-center justify-between mb-8">
                      <div class="text-white/40 font-mono text-xs uppercase tracking-widest">
                        core team
                      </div>
                      <div class="text-white/30 font-mono text-xs">
                        [{liteCardMembers.length.toString().padStart(2, '0')}]
                      </div>
                    </div>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                      {liteCardMembers.map((member) => (
                        <LiteMemberCard member={member} year={year} />
                      ))}
                    </div>
                  </div>
                </div>
              )}
              
              <!-- General Members List -->
              {listMembers.length > 0 && (
                <div class="mb-12">
                  <div class="border border-white/10 bg-white/[0.02] p-8">
                    <div class="flex items-center justify-between mb-8">
                      <div class="text-white/40 font-mono text-xs uppercase tracking-widest">
                        general members
                      </div>
                      <div class="text-white/30 font-mono text-xs">
                        [{listMembers.length.toString().padStart(2, '0')}]
                      </div>
                    </div>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-1">
                      {listMembers.map((member, index) => (
                        <div class="border border-white/10 bg-white/[0.02] p-4 hover:bg-white/[0.05] transition-all duration-200">
                          <div class="flex items-center gap-3">
                            <div class="text-white/40 font-mono text-xs min-w-[2rem]">
                              {(index + 1).toString().padStart(2, '0')}.
                            </div>
                            <div class="w-8 h-8 rounded-full bg-white/10 flex items-center justify-center text-white font-bold text-xs">
                              {member.name.charAt(0)}
                            </div>
                            <div class="flex-1 min-w-0">
                              <h4 class="text-white font-medium text-sm truncate" style="font-family: 'Helvetica Neue', sans-serif;">
                                {member.name}
                              </h4>
                              <p class="text-white/50 text-xs font-mono truncate">
                                {member.role}
                              </p>
                            </div>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
              )}
            </div>
          );
        })}
      </div>
    </section>

    <!-- Call to Action -->
    <section class="pb-16 px-8 relative z-10">
      <div class="max-w-6xl mx-auto">
        <div class="border border-white/10 bg-white/[0.02] p-8">
          <!-- Terminal Header -->
          <div class="font-mono text-white/60 space-y-2 mb-8">
            <div class="text-green-400 text-sm">$ echo "join the community"</div>
            <div class="text-white/70 text-sm">initiating recruitment protocol...</div>
          </div>
          
          <!-- CTA Content -->
          <div class="text-center space-y-6">
            <h3 class="text-3xl font-bold text-white" style="font-family: 'Helvetica Neue', sans-serif;">
              Ready to Build the Future?
            </h3>
            <p class="text-white/80 text-lg max-w-2xl mx-auto leading-relaxed font-light" style="font-family: 'Helvetica Neue', sans-serif;">
              Join 500+ creators, innovators, and builders at Georgia State University in Atlanta
            </p>
            
            <!-- Terminal-style Buttons -->
            <div class="flex flex-col sm:flex-row gap-4 justify-center mt-8">
              <a 
                href={GOOGLE_FORM_URL}
                target="_blank"
                rel="noopener noreferrer"
                class="inline-flex items-center px-8 py-4 bg-green-600 hover:bg-green-500 text-white font-medium transition-all duration-300 group border border-green-500 hover:border-green-400"
                style="font-family: 'Helvetica Neue', sans-serif;"
              >
                <span class="mr-3 text-green-100 group-hover:text-white transition-colors duration-300 font-mono">></span>
                <span class="group-hover:text-green-50 transition-colors duration-300">join progsu</span>
              </a>
              
              <a 
                href={DISCORD_LINK}
                target="_blank"
                rel="noopener noreferrer"
                class="inline-flex items-center px-8 py-4 border border-white/30 text-white hover:bg-white/[0.08] hover:border-white/50 font-medium transition-all duration-300 group"
                style="font-family: 'Helvetica Neue', sans-serif;"
              >
                <span class="mr-3 text-white/50 group-hover:text-white transition-colors duration-300 font-mono">></span>
                <span class="group-hover:text-white transition-colors duration-300">join discord</span>
              </a>
            </div>
          </div>
        </div>
      </div>
    </section>
  </div>
</Layout>

<style>
  /* Tab functionality */
  .tab-btn.active {
    border-color: white;
    background: rgba(255, 255, 255, 0.08);
    color: white;
  }
  
  /* Smooth transitions */
  .tab-content {
    animation: fadeIn 0.3s ease-in-out;
  }
  
  @keyframes fadeIn {
    from { 
      opacity: 0; 
      transform: translateY(10px); 
    }
    to { 
      opacity: 1; 
      transform: translateY(0); 
    }
  }
</style>

<script>
  function initTabs() {
    const tabBtns = document.querySelectorAll('.tab-btn');
    const tabContents = document.querySelectorAll('.tab-content');
    
    // Set first tab as active
    if (tabBtns.length > 0) {
      tabBtns[0].classList.add('active');
    }
    
    tabBtns.forEach(btn => {
      btn.addEventListener('click', () => {
        const targetYear = btn.getAttribute('data-tab');
        const targetContent = document.querySelector(`[data-tab-content="${targetYear}"]`);
        
        if (!targetContent) return;
        
        // Update button states
        tabBtns.forEach(b => {
          b.classList.remove('active');
          b.classList.remove('border-white', 'bg-white/[0.08]', 'text-white');
          b.classList.add('border-white/20', 'bg-white/[0.02]', 'text-white/70');
        });
        
        // Activate clicked tab
        btn.classList.add('active');
        btn.classList.add('border-white', 'bg-white/[0.08]', 'text-white');
        btn.classList.remove('border-white/20', 'bg-white/[0.02]', 'text-white/70');
        
        // Update content visibility
        tabContents.forEach(content => {
          content.classList.add('hidden');
        });
        targetContent.classList.remove('hidden');
      });
    });
  }
  
  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initTabs);
  } else {
    initTabs();
  }
  
  // Handle Astro page transitions
  document.addEventListener('astro:page-load', initTabs);
</script>