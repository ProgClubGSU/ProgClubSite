---
import Layout from "@/layouts/Layout.astro";
import { DISCORD_LINK, SITE_TITLE } from "@/consts";
import { gettingInterviewGuides, passingInterviewGuides, additionalResources } from "@/data/gitpaid";
---

<Layout title={`Resources - ${SITE_TITLE}`} staticHeader={true}>
  <div class="min-h-screen bg-white">
    <!-- Custom Static Header for gitPAID -->
    <header class="bg-white border-b border-gray-200 sticky top-0 z-50">
      <div class="max-w-4xl mx-auto px-6 py-4 flex items-center justify-between">
        <!-- Left: Logo/Brand -->
        <div class="flex items-center space-x-3">
          <a href="/" class="text-xl font-bold text-gray-900 hover:text-gray-700 transition-colors">
            progsu
          </a>
          <span class="text-gray-300">/</span>
          <span class="text-lg font-semibold text-blue-600">gitPAID</span>
        </div>

        <!-- Right: Navigation -->
        <nav class="flex items-center space-x-6">
          <a href="/#events" class="text-sm text-gray-600 hover:text-gray-900 transition-colors">Events</a>
          <a href="/#about" class="text-sm text-gray-600 hover:text-gray-900 transition-colors">About</a>
          <a href={DISCORD_LINK} target="_blank" rel="noopener noreferrer" class="text-sm bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700 transition-colors">
            Join Discord
          </a>
        </nav>
      </div>
    </header>

    <!-- Content -->
    <div class="max-w-4xl mx-auto px-6 py-12">

        <!-- Table of Contents -->
        <nav class="mb-6 bg-gray-50 border border-gray-200 rounded-lg p-4">
          <h2 class="text-sm font-semibold text-gray-700 mb-3 uppercase tracking-wide">Quick Access</h2>
          <ul class="space-y-1 text-sm">
            <li><a href="#getting-interview" class="text-blue-600 hover:text-blue-800">Getting the Interview</a></li>
            <li><a href="#passing-interview" class="text-blue-600 hover:text-blue-800">Passing the Interview</a></li>
            <li><a href="#additional-resources" class="text-blue-600 hover:text-blue-800">Additional Resources</a></li>
          </ul>
        </nav>

        <!-- Overview -->
        <section id="overview" class="mb-6">
          <p class="text-gray-600 mb-4">gitPAID breaks down landing your first tech job into two phases: <strong>getting the interview</strong> and <strong>passing the interview</strong>. Each resource below targets a specific challenge in your job search.</p>
        </section>
        
        <!-- Getting the Interview -->
        <section id="getting-interview" class="mb-8">
          <h2 class="text-xl font-bold text-gray-900 mb-3">ðŸ“§ Getting the Interview</h2>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
            {gettingInterviewGuides.map((resource) => {
              const isExternal = resource.url && (resource.url.startsWith('http') || resource.url.startsWith('https'));
              const Component = resource.url && resource.url !== '#' ? 'a' : 'div';
              const linkProps = resource.url && resource.url !== '#' ? {
                href: resource.url,
                target: isExternal ? '_blank' : undefined,
                rel: isExternal ? 'noopener noreferrer' : undefined
              } : {};

              return (
                <Component
                  {...linkProps}
                  class={`block border border-gray-200 rounded-lg p-4 ${resource.url && resource.url !== '#' ? 'hover:border-blue-300 hover:bg-blue-50 transition-colors cursor-pointer' : 'bg-gray-50'}`}
                >
                  <div class="flex items-center justify-between mb-2">
                    <h3 class={`font-semibold ${resource.url && resource.url !== '#' ? 'text-blue-600' : 'text-gray-500'}`}>
                      {resource.title}
                    </h3>
                    {resource.url === '#' && (
                      <span class="text-xs px-2 py-1 bg-gray-200 text-gray-600 rounded">Coming Soon</span>
                    )}
                  </div>
                  <p class="text-gray-600 text-sm">{resource.description}</p>
                </Component>
              );
            })}
          </div>
        </section>

        <!-- Passing the Interview -->
        <section id="passing-interview" class="mb-8">
          <h2 class="text-xl font-bold text-gray-900 mb-3">ðŸ’» Passing the Interview</h2>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
            {passingInterviewGuides.map((resource) => {
              const isExternal = resource.url && (resource.url.startsWith('http') || resource.url.startsWith('https'));
              const Component = resource.url && resource.url !== '#' ? 'a' : 'div';
              const linkProps = resource.url && resource.url !== '#' ? {
                href: resource.url,
                target: isExternal ? '_blank' : undefined,
                rel: isExternal ? 'noopener noreferrer' : undefined
              } : {};

              return (
                <Component
                  {...linkProps}
                  class={`block border border-gray-200 rounded-lg p-4 ${resource.url && resource.url !== '#' ? 'hover:border-blue-300 hover:bg-blue-50 transition-colors cursor-pointer' : 'bg-gray-50'}`}
                >
                  <div class="flex items-center justify-between mb-2">
                    <h3 class={`font-semibold ${resource.url && resource.url !== '#' ? 'text-blue-600' : 'text-gray-500'}`}>
                      {resource.title}
                    </h3>
                    {resource.url === '#' && (
                      <span class="text-xs px-2 py-1 bg-gray-200 text-gray-600 rounded">Coming Soon</span>
                    )}
                  </div>
                  <p class="text-gray-600 text-sm">{resource.description}</p>
                </Component>
              );
            })}
          </div>
        </section>

        <!-- Additional Resources -->
        <section id="additional-resources" class="mb-12">
          <h2 class="text-2xl font-bold text-gray-900 mb-6">Additional Resources</h2>

          {additionalResources.map((category) => (
            <div class="mb-8">
              <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                <span class="mr-2">{category.icon}</span>
                {category.title}
              </h3>
              <ul class="space-y-3">
                {category.resources.map((resource) => (
                  <li class="border border-gray-200 rounded-lg p-4 hover:border-blue-300 hover:bg-blue-50 transition-colors">
                    <a href={resource.url} target="_blank" rel="noopener noreferrer" class="block">
                      <div class="font-semibold text-blue-600">{resource.title}</div>
                      <p class="text-sm text-gray-600 mt-1">{resource.description}</p>
                    </a>
                  </li>
                ))}
              </ul>
            </div>
          ))}
        </section>


        <!-- Footer -->
        <footer class="mt-12 pt-6 border-t border-gray-200">
          <div class="text-center text-sm text-gray-500">
            <p>Part of progsu's commitment to helping students land their first tech job.</p>
            <p class="mt-1">Questions? Join our <a href={DISCORD_LINK} target="_blank" class="text-blue-600 hover:text-blue-800">Discord community</a>.</p>
          </div>
        </footer>
      </div>
    </div>
</Layout>

<style>
  /* Disable cursor and background glow effects on gitPAID page, keep binary trail */
  #cursor-glow {
    display: none !important;
    opacity: 0 !important;
    visibility: hidden !important;
  }

  #bg-glow {
    display: none !important;
    opacity: 0 !important;
    visibility: hidden !important;
  }

  .cursor-glow {
    display: none !important;
    opacity: 0 !important;
    visibility: hidden !important;
  }
</style>

<script>
  // Additional JavaScript to ensure glow effects are disabled
  document.addEventListener('DOMContentLoaded', function() {
    const cursorGlow = document.getElementById('cursor-glow');
    const bgGlow = document.getElementById('bg-glow');

    if (cursorGlow) {
      cursorGlow.style.display = 'none';
      cursorGlow.style.opacity = '0';
      cursorGlow.style.visibility = 'hidden';
    }

    if (bgGlow) {
      bgGlow.style.display = 'none';
      bgGlow.style.opacity = '0';
      bgGlow.style.visibility = 'hidden';
    }
  });

  // Override any cursor effects that might be set by the main layout
  document.addEventListener('mousemove', function(e) {
    const cursorGlow = document.getElementById('cursor-glow');
    const bgGlow = document.getElementById('bg-glow');

    if (cursorGlow) {
      cursorGlow.style.display = 'none';
      cursorGlow.style.opacity = '0';
    }

    if (bgGlow) {
      bgGlow.style.display = 'none';
      bgGlow.style.opacity = '0';
    }
  });
</script> 