---
import Layout from "@/layouts/Layout.astro";
import Section from "@/components/Section.astro";
import Breadcrumb from "@/components/Breadcrumb.astro";
import { clubTimeline, clubStats } from "@/data/clubHistory";

// Transform our timeline data to match the existing template structure
const timelineEvents = [
  // Founding Era
  {
    date: "March 2020",
    title: "Plot Twist: Pandemic Sparks Programming Paradise",
    description: "Jenny Liu founded PROGgsu during the global pandemic, creating GSU's premier programming community from the ground up with the help of Facebook EIR Andrew Huang.",
    type: "founding",
    details: [
      "Founded by Jenny Liu during COVID-19 pandemic",
      "Andrew Huang (Facebook EIR) became founding academic advisor",
      "Established founding team with Shardul, Ikenna, Adithya, Beethoven, and Gyan",
      "Built community from a vision during unprecedented times"
    ],
    milestone: true
  },
  {
    date: "Fall 2020",
    title: "Level 1 Complete: From Zero to Hero Events",
    description: "Launched inaugural programming events including CS Jeopardy, technical interview prep, and resume workshops with 25+ regular attendees.",
    type: "event",
    details: [
      "CS Jeopardy with breakout rooms and team collaboration",
      "Technical interview preparation sessions",
      "Resume workshops with industry guidance",
      "Consistent 25+ attendance despite virtual format"
    ],
    milestone: false
  },
  {
    date: "Spring 2021",
    title: "Achievement Unlocked: We're Legit Now!",
    description: "Achieved official GSU recognition as a registered student organization with approved charter and PIN registration.",
    type: "milestone",
    details: [
      "Completed charter with defined officer roles",
      "Successfully registered through PIN system",
      "Established constitutional framework still used today",
      "First official officer elections held in April 2021"
    ],
    milestone: true
  },
  {
    date: "January 2021",
    title: "The Holy Trinity: DSA, Mocks & Competitive Chaos",
    description: "Launched the core programs that define PROGgsu: DSA Interview Prep, Mock Interviews, and Competitive Programming.",
    type: "program",
    details: [
      "Saturday DSA Interview Prep series (2-4pm weekly)",
      "Bi-weekly mock technical interviews with industry professionals",
      "Competitive programming competitions and training",
      "Programs helping dozens of students land internships"
    ],
    milestone: true
  },
  {
    date: "Fall 2021",
    title: "HackJam Sessions: Where Code Gets Sticky",
    description: "Introduced hands-on coding workshops covering web development, React.js, and practical programming skills with interactive learning.",
    type: "workshop",
    details: [
      "Beginner web development (HTML/CSS)",
      "React.js workshops with live coding",
      "Interactive breakout rooms and pair programming",
      "Focus on practical, applicable skills"
    ],
    milestone: false
  },
  {
    date: "Fall 2021",
    title: "Executive Shuffle: New Captains, Same Ship",
    description: "Successful leadership transition with expanded executive team including new academic advisors and specialized roles.",
    type: "growth",
    details: [
      "John Martin and Batya Zamansky as academic advisors",
      "Expanded leadership with Directors of Events and Technology",
      "Structured executive training and shadowing program",
      "Established sustainable leadership development pipeline"
    ],
    milestone: false
  },
  {
    date: "2022-2025",
    title: "The Prahbir Dynasty: Three Years of Glory",
    description: "Prahbir Virk serves as 3rd President from 2022-2025, including an innovative co-presidency period with Ethan Munji during 2023-2024.",
    type: "leadership",
    details: [
      "Three-year presidential tenure (3rd President)",
      "Collaborative co-presidency model with Ethan Munji (2023-2024)",
      "Sustained membership growth and engagement",
      "Maintained core programs and community culture"
    ],
    milestone: true
  },
  {
    date: "2023-2024",
    title: "Dynamic Duo: Two Presidents, One Brain Cell", 
    description: "Unique collaborative leadership period with Prahbir Virk (3rd President) and Ethan Munji (4th President) serving together as co-presidents.",
    type: "milestone",
    details: [
      "First co-presidency in club history",
      "Prahbir Virk continued as 3rd President",
      "Ethan Munji served as 4th President simultaneously",
      "Demonstrated innovative shared governance model"
    ],
    milestone: true
  },
  {
    date: "Present",
    title: "Joey's Reign: The Fifth Element of Leadership",
    description: "Joey Zhang becomes the 5th President in 2025, leading PROGgsu into the future with continued innovation and community building.",
    type: "current",
    details: [
      "5th President in club's 5+ year history",
      "Building on legacy of 4 previous presidents",
      "Continued innovation and community building",
      "Leading PROGgsu into its next chapter"
    ],
    milestone: true
  }
];
---

<Layout
  title="History - PROGgsu"
  description="Discover the journey of PROGgsu from its founding to today. Explore our milestones, achievements, and the growth of GSU's programming community."
>
  <Section title="Our Journey" className="pt-16">
    <div class="max-w-5xl mx-auto">
      <div class="text-center mb-16">
        <Breadcrumb title="Club History" />
        <p class="text-white/80 text-lg mt-6 max-w-3xl mx-auto leading-relaxed">
          From a visionary idea during the COVID-19 pandemic to a thriving community with proven programs, 
          discover how PROGgsu has evolved since March 2020 to become Georgia State University's premier programming organization.
        </p>
      </div>

      <!-- Vertical Timeline Container -->
      <div class="relative">
        <!-- Central Timeline Line -->
        <div class="absolute left-1/2 transform -translate-x-1/2 w-0.5 bg-gradient-to-b from-white/30 via-white/20 to-white/30 rounded-full" 
             style="height: calc(100% - 2rem); top: 1rem;"></div>
        
        <!-- Timeline Events -->
        {timelineEvents.map((event, index) => (
          <div id={`timeline-${index}`} class={`relative flex items-center ${index % 2 === 0 ? 'justify-start' : 'justify-end'} mb-12 timeline-entrance`}>
            <!-- Timeline Dot -->
            <div class={`absolute left-1/2 transform -translate-x-1/2 z-20 w-4 h-4 rounded-full border-2 border-black ${event.milestone ? 'bg-white shadow-lg shadow-white/30' : 'bg-white/60 shadow-lg shadow-white/20'} transition-all duration-300 hover:scale-125`}></div>
            
            <!-- Event Card -->
            <div class={`${index % 2 === 0 ? 'mr-auto pr-12' : 'ml-auto pl-12'} w-5/12 group`}>
              <div class="relative overflow-hidden rounded-2xl border border-white/10 bg-white/[0.02] backdrop-blur-xl shadow-lg hover:shadow-2xl transition-all duration-500 hover:scale-[1.02] hover:border-white/20 timeline-card glass-card">
                <!-- Glass effect overlay -->
                <div class="absolute inset-0 bg-gradient-to-br from-white/[0.05] via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                
                <!-- Card Header -->
                <div class="relative px-4 py-3 bg-gradient-to-r from-white/[0.08] to-white/[0.04] backdrop-blur-sm border-b border-white/10">
                  <div class="flex items-center justify-between">
                    <span class="text-sm font-bold text-white/90 uppercase tracking-wide">
                      {event.date}
                    </span>
                    <div class="w-2 h-2 rounded-full bg-white/40"></div>
                  </div>
                </div>

                <!-- Card Content -->
                <div class="relative p-4 z-10">
                  <h3 class="text-xl font-bold text-white mb-3 group-hover:text-white/90 transition-colors duration-300">
                    {event.title}
                    {event.milestone && (
                      <span class="ml-2 inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-white/10 border border-white/20 text-white/80">
                        Milestone
                      </span>
                    )}
                  </h3>
                  
                  <p class="text-white/70 text-sm mb-4 leading-relaxed">
                    {event.description}
                  </p>

                  <!-- Event Details -->
                  <div class="space-y-2">
                    <h4 class="text-xs text-white/60 uppercase tracking-wide font-medium">Highlights</h4>
                    <ul class="space-y-1">
                      {event.details.map((detail) => (
                        <li class="flex items-start gap-2 text-xs text-white/60">
                          <span class="text-white/40 mt-0.5">â€¢</span>
                          <span>{detail}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                </div>

                <!-- Connection Line to Timeline -->
                <div class={`absolute top-6 ${index % 2 === 0 ? 'right-0 translate-x-full' : 'left-0 -translate-x-full'} w-12 h-px bg-gradient-to-r ${index % 2 === 0 ? 'from-white/20 to-transparent' : 'from-transparent to-white/20'}`}></div>
                
                <!-- Subtle tint effect -->
                <div class="absolute inset-0 bg-gradient-to-br from-blue-500/[0.02] via-transparent to-purple-500/[0.02] opacity-0 group-hover:opacity-100 transition-opacity duration-500 rounded-2xl"></div>
              </div>
            </div>
          </div>
        ))}
      </div>

      <!-- Floating Table of Contents -->
      <div id="timelineTOC" class="fixed top-1/2 right-6 transform -translate-y-1/2 z-50 hidden lg:block">
        <div class="bg-black/20 backdrop-blur-xl border border-white/20 rounded-2xl p-4 shadow-2xl">
          <h4 class="text-white/90 text-sm font-bold mb-3 text-center">Timeline</h4>
          <div class="space-y-2">
            {timelineEvents.map((event, index) => (
              <button 
                onclick={`scrollToTimelineSmooth(${index})`}
                class="timeline-nav-dot w-3 h-3 rounded-full border-2 border-white/40 bg-white/20 hover:bg-white/60 hover:border-white/80 transition-all duration-300 block mx-auto relative group"
                data-index={index}
                title={event.title}
              >
                <div class="absolute right-6 top-1/2 transform -translate-y-1/2 bg-black/80 text-white text-xs px-2 py-1 rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap pointer-events-none">
                  {event.date}
                </div>
              </button>
            ))}
          </div>
        </div>
      </div>

      <!-- Floating Navigation Arrows -->
      <div id="floatingNav" class="fixed bottom-8 left-1/2 transform -translate-x-1/2 z-50">
        <div class="flex items-center gap-4 bg-black/20 backdrop-blur-xl border border-white/20 rounded-full px-6 py-3 shadow-2xl">
          <button 
            id="prevBtnFloat" 
            onclick="navigateTimelineSmooth(-1)" 
            class="flex items-center justify-center w-10 h-10 rounded-full bg-white/10 hover:bg-white/20 text-white transition-all duration-300 hover:scale-110 disabled:opacity-50 disabled:cursor-not-allowed"
          >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
            </svg>
          </button>
          
          <div class="text-center min-w-[80px]">
            <span id="timelinePositionFloat" class="text-white/90 text-sm font-medium">1 of {timelineEvents.length}</span>
          </div>
          
          <button 
            id="nextBtnFloat" 
            onclick="navigateTimelineSmooth(1)" 
            class="flex items-center justify-center w-10 h-10 rounded-full bg-white/10 hover:bg-white/20 text-white transition-all duration-300 hover:scale-110 disabled:opacity-50 disabled:cursor-not-allowed"
          >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
            </svg>
          </button>
        </div>
      </div>

      <!-- Stats Section -->
      <div class="mt-20 grid grid-cols-1 md:grid-cols-4 gap-6">
        <div class="text-center p-6 rounded-2xl border border-white/10 bg-white/[0.02] backdrop-blur-xl glass-card">
          <div class="text-3xl font-bold text-white mb-2">{clubStats.yearsActive}</div>
          <div class="text-sm text-white/60">Years Strong</div>
        </div>
        <div class="text-center p-6 rounded-2xl border border-white/10 bg-white/[0.02] backdrop-blur-xl glass-card">
          <div class="text-3xl font-bold text-white mb-2">100+</div>
          <div class="text-sm text-white/60">Students Helped</div>
        </div>
        <div class="text-center p-6 rounded-2xl border border-white/10 bg-white/[0.02] backdrop-blur-xl glass-card">
          <div class="text-3xl font-bold text-white mb-2">{clubStats.programsLaunched.length}</div>
          <div class="text-sm text-white/60">Core Programs</div>
        </div>
        <div class="text-center p-6 rounded-2xl border border-white/10 bg-white/[0.02] backdrop-blur-xl glass-card">
          <div class="text-3xl font-bold text-white mb-2">{clubStats.keyAchievements.length}</div>
          <div class="text-sm text-white/60">Major Milestones</div>
        </div>
      </div>

      <!-- Future Vision -->
      <div class="mt-16 text-center py-12 px-8 rounded-2xl border border-white/10 bg-white/[0.02] backdrop-blur-xl glass-card">
        <h3 class="text-3xl font-bold text-white mb-4 glow-pulse-title">
          The Future is Bright
        </h3>
        <p class="text-white/70 text-lg mb-6 max-w-3xl mx-auto leading-relaxed">
          As we continue to grow, our mission remains the same: fostering an inclusive environment where every student 
          can learn, create, and thrive in the world of programming. Join us as we write the next chapter of our story!
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <a 
            href="/members" 
            class="px-8 py-3 rounded-lg bg-white/10 hover:bg-white/20 text-white font-medium transition-all duration-300 hover:scale-105 backdrop-blur-sm border border-white/20 hover:border-white/30"
          >
            Meet Our Team
          </a>
          <a 
            href="/events" 
            class="px-8 py-3 rounded-lg border border-white/20 text-white hover:bg-white/5 font-medium transition-all duration-300 hover:scale-105 backdrop-blur-sm"
          >
            Upcoming Events
          </a>
        </div>
      </div>
    </div>
  </Section>
</Layout>

<style>
  .glow-pulse-title {
    animation: titlePulse 2.5s infinite;
  }
  
  /* Clean minimal styles for vertical timeline */
  .timeline-entrance {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.6s ease forwards;
  }
  
  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* Stagger the animation for each timeline item */
  .timeline-entrance:nth-child(1) { animation-delay: 0.1s; }
  .timeline-entrance:nth-child(2) { animation-delay: 0.2s; }
  .timeline-entrance:nth-child(3) { animation-delay: 0.3s; }
  .timeline-entrance:nth-child(4) { animation-delay: 0.4s; }
  .timeline-entrance:nth-child(5) { animation-delay: 0.5s; }
  .timeline-entrance:nth-child(6) { animation-delay: 0.6s; }
  .timeline-entrance:nth-child(7) { animation-delay: 0.7s; }
  .timeline-entrance:nth-child(8) { animation-delay: 0.8s; }
  
  /* Subtle glass effect enhancement */
  .glass-card {
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
  }
  
  /* Hover glow effect */
  .timeline-card:hover {
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3), 
                0 0 0 1px rgba(255, 255, 255, 0.1),
                0 0 20px rgba(255, 255, 255, 0.05);
  }

  /* Floating navigation styles */
  #timelineTOC {
    opacity: 0;
    pointer-events: none;
    transition: all 0.5s ease-in-out;
  }

  #floatingNav {
    opacity: 0;
    pointer-events: none;
    transition: all 0.5s ease-in-out;
  }

  .timeline-nav-dot {
    transition: all 0.3s ease;
  }

  .timeline-nav-dot:hover {
    transform: scale(1.2);
  }

  /* Mobile adjustments */
  @media (max-width: 1024px) {
    #timelineTOC {
      display: none !important;
    }
    
    #floatingNav {
      bottom: 4rem;
      left: 50%;
      transform: translateX(-50%);
    }
  }
</style>

<script>
  // Enhanced floating timeline navigation
  let currentTimelineIndex = 0;
  let totalTimelineItems = 0;
  let timelineElements = [];
  let observer = null;

  function initializeTimeline() {
    timelineElements = Array.from(document.querySelectorAll('[id^="timeline-"]'));
    totalTimelineItems = timelineElements.length;
    
    if (totalTimelineItems === 0) return;

    // Set up intersection observer to track which timeline item is visible
    observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const index = parseInt(entry.target.id.split('-')[1]);
          updateActiveTimelineItem(index);
        }
      });
    }, {
      rootMargin: '-50% 0px -50% 0px', // Trigger when item is in center of viewport
      threshold: 0
    });

    // Observe all timeline items
    timelineElements.forEach(element => {
      observer.observe(element);
    });

    updateNavigationState();
  }

  function scrollToTimelineSmooth(index) {
    if (index < 0 || index >= totalTimelineItems) return;
    
    const element = document.getElementById(`timeline-${index}`);
    if (element) {
      element.scrollIntoView({ 
        behavior: 'smooth', 
        block: 'center' 
      });
      currentTimelineIndex = index;
      updateNavigationState();
    }
  }

  function navigateTimelineSmooth(direction) {
    const newIndex = currentTimelineIndex + direction;
    if (newIndex >= 0 && newIndex < totalTimelineItems) {
      scrollToTimelineSmooth(newIndex);
    }
  }

  function updateActiveTimelineItem(index) {
    currentTimelineIndex = index;
    updateNavigationState();
    updateTOCDots();
  }

  function updateNavigationState() {
    // Update floating navigation buttons
    const prevBtn = document.getElementById('prevBtnFloat');
    const nextBtn = document.getElementById('nextBtnFloat');
    const positionSpan = document.getElementById('timelinePositionFloat');

    if (prevBtn && nextBtn && positionSpan) {
      prevBtn.disabled = currentTimelineIndex === 0;
      nextBtn.disabled = currentTimelineIndex === totalTimelineItems - 1;
      positionSpan.textContent = `${currentTimelineIndex + 1} of ${totalTimelineItems}`;
    }
  }

  function updateTOCDots() {
    // Update table of contents dots
    const dots = document.querySelectorAll('.timeline-nav-dot');
    dots.forEach((dot, index) => {
      if (index === currentTimelineIndex) {
        dot.classList.add('bg-white', 'border-white');
        dot.classList.remove('bg-white/20', 'border-white/40');
      } else {
        dot.classList.add('bg-white/20', 'border-white/40');
        dot.classList.remove('bg-white', 'border-white');
      }
    });
  }

  // Show/hide floating navigation based on scroll position
  function handleScroll() {
    const floatingNav = document.getElementById('floatingNav');
    const timelineTOC = document.getElementById('timelineTOC');
    const timeline = document.querySelector('.timeline-entrance');
    
    if (timeline && floatingNav && timelineTOC) {
      const timelineRect = timeline.getBoundingClientRect();
      const isTimelineVisible = timelineRect.top < window.innerHeight && timelineRect.bottom > 0;
      
      if (isTimelineVisible) {
        floatingNav.classList.remove('opacity-0', 'pointer-events-none');
        floatingNav.classList.add('opacity-100');
        timelineTOC.classList.remove('opacity-0', 'pointer-events-none');
        timelineTOC.classList.add('opacity-100');
      } else {
        floatingNav.classList.add('opacity-0', 'pointer-events-none');
        floatingNav.classList.remove('opacity-100');
        timelineTOC.classList.add('opacity-0', 'pointer-events-none');
        timelineTOC.classList.remove('opacity-100');
      }
    }
  }

  // Initialize everything when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    // Add initial classes for smooth transitions
    const floatingNav = document.getElementById('floatingNav');
    const timelineTOC = document.getElementById('timelineTOC');
    
    if (floatingNav) {
      floatingNav.classList.add('transition-all', 'duration-500');
    }
    if (timelineTOC) {
      timelineTOC.classList.add('transition-all', 'duration-500');
    }

    // Initialize timeline functionality
    setTimeout(initializeTimeline, 100); // Small delay to ensure DOM is ready
    
    // Add scroll listener
    window.addEventListener('scroll', handleScroll);
    handleScroll(); // Initial check
  });

  // Keyboard navigation
  document.addEventListener('keydown', (e) => {
    if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {
      e.preventDefault();
      navigateTimelineSmooth(-1);
    } else if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {
      e.preventDefault();
      navigateTimelineSmooth(1);
    }
  });

  // Clean up observer when page unloads
  window.addEventListener('beforeunload', () => {
    if (observer) {
      observer.disconnect();
    }
  });
</script> 